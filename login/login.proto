// login
package login;
//
option java_package = "Stargaze";
//option java_outer_classname = "Login";
//
option optimize_for = SPEED;

/////////////////////////////////////////////////////
// message define
/////////////////////////////////////////////////////
// account
message Account {
  // accout type enum
  enum Type {
    kSelf = 0;
    kSina = 1;
    kTencent = 2;
    kBaidu = 3;
    kRenren = 4;
    kTaobao = 5;
    kMomo = 6;
    kDouban = 7;
    kWechat = 8;
    kEnd = 9;
  }
  // type
  required Type type = 1 [default = kSelf]; 
  // name
  required string name = 2;
  // token, hashed password or else
  required string token = 3;
  // master email
  optional string email = 4;
}
// Friend 
message Friend {
  // name
  required string name = 2;
}
// birthday
message Birthday {
  // year
  required sfixed32 year = 1 [default = 1970];
  // month
  enum Month {
    kNone = 0;
    kJanuary = 1;
    kFebruary = 2;
    kMarch = 3;
    kApril = 4;
    kMay = 5;
    kJune = 6;
    kJuly = 7;
    kAugust = 8;
    kSeptember = 9;
    kOctober = 10;
    kNovember = 11;
    kDecember = 12;
    kEnd = 13;
  }
  required Month month = 2 [default = kJanuary];
  required sfixed32 day = 3 [default = 1];
}
// Profile
message Profile {
  // gender
  enum Gender {
    kPrivate = 0;
    kMale = 1;
    kFemale = 2;
    kBL = 3;
    kGL = 4;
    kBLG = 5;
    kGLB = 6;
    kEnd = 7;
  }  
  optional Gender gender = 1 [default = kPrivate];
  // birthday
  optional Birthday birthday = 2;
  // other email
  repeated string emails = 3; 
  // friends
  repeated Friend friends = 4;
  // other platform accounts
  repeated Account accounts = 5;
}
// user, db save this
message User {
  // acounts
  repeated Account account = 1;
  // acounts
  optional Profile profile = 2;  
}
/////////////////////////////////////////////////////
// message transport
/////////////////////////////////////////////////////
// request
message Request {
  // type
  required uint32 type = 1 [default = 0];
  // command
  enum Command {
    // ping
    kPing = 0;
    // register user
    kRegister = 1;
    // get profile
    kLogin = 2;
    kEnd = 3;
  } 
  required Command command = 2 [default = kPing];
  // body
  // register
  optional User register = 3;
  // login
  optional Account login = 4;
}
// Response
message Response {
  // type
  required uint32 type = 1 [default = 0];
  //
  enum Status {
    kOk = 0;
    kError = 1;
    kEnd = 2; //
  }
  // status
  required Status status = 2 [default = kOk];
  // body
  // ping
  optional string pong = 3;
  // error
  optional string error = 4;
  // register or login
  optional User user = 5;
}